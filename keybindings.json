// Place your key bindings in this file to override the defaults
[
  // Files ExplorerにC-x C-fでフォーカス
  {
    "key": "ctrl+x ctrl+j",
    "command": "workbench.explorer.fileView.focus"
  },
  // ディレクトリはEnterで開く
  {
    "key": "enter",
    "command": "list.toggleExpand",
    "when": "listFocus && !inputFocus && explorerViewletVisible && filesExplorerFocus && explorerResourceIsFolder"
  },
  // Enterにrenameが割り当てられていると、Enterでファイルを開けないのでRenameのキーバインドから外す
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "ctrl+z",
    "command": "undo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+z",
    "command": "-undo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+z",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "shift+cmd+z",
    "command": "-redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.closeSidebar"
  },
  {
    "key": "shift+escape",
    "command": "-cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "emacs-mcx.cancel",
    "when": "editorHasSelection && editorTextFocus && !config.emacs-mcx.useMetaPrefixEscape"
  },
  {
    "key": "escape",
    "command": "-emacs-mcx.cancel",
    "when": "editorHasSelection && editorTextFocus && !config.emacs-mcx.useMetaPrefixEscape"
  },
  {
    "key": "ctrl+g",
    "command": "emacs-mcx.cancel",
    "when": "editorHasMultipleSelections && editorTextFocus && !config.emacs-mcx.useMetaPrefixEscape"
  },
  {
    "key": "escape",
    "command": "-emacs-mcx.cancel",
    "when": "editorHasMultipleSelections && editorTextFocus && !config.emacs-mcx.useMetaPrefixEscape"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.action.navigateEditorGroups"
  },
  {
    "key": "ctrl+x o",
    "command": "-workbench.action.navigateEditorGroups",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.cancelSelectionAnchor",
    "when": "editorTextFocus && selectionAnchorSet"
  },
  {
    "key": "ctrl+g",
    "command": "editor.debug.action.closeExceptionWidget",
    "when": "exceptionWidgetVisible"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.hideInterfaceOverview",
    "when": "interfaceOverviewVisible"
  },
  {
    "key": "ctrl+g",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
  },
  {
    "key": "ctrl+g",
    "command": "notifications.hideList",
    "when": "notificationCenterVisible"
  },
  {
    "key": "ctrl+g",
    "command": "settings.action.clearSearchResults",
    "when": "inSettingsEditor && inSettingsSearch"
  },
  {
    "key": "ctrl+g",
    "command": "settings.action.focusLevelUp",
    "when": "inSettingsEditor && !inSettingsSearch"
  },
  {
    "key": "ctrl+g",
    "command": "search.action.focusQueryEditorWidget",
    "when": "inSearchEditor"
  },
  {
    "key": "ctrl+g",
    "command": "search.action.cancel",
    "when": "listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.terminal.clearSelection",
    "when": "terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.terminal.navigationModeExit",
    "when": "accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.terminal.hideFind",
    "when": "terminalFindVisible && terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.blockComment",
    "when": "config.emacs-mcx.useMetaPrefixEscape && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+g",
    "command": "breadcrumbs.selectEditor",
    "when": "breadcrumbsActive && breadcrumbsVisible"
  },
  {
    "key": "ctrl+g",
    "command": "cancelLinkedEditingInput",
    "when": "LinkedEditingInputVisible && editorTextFocus"
  },
  {
    "key": "ctrl+g",
    "command": "cancelRenameInput",
    "when": "editorFocus && renameInputVisible"
  },
  {
    "key": "ctrl+g",
    "command": "cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "closeAccessibilityHelp",
    "when": "accessibilityHelpWidgetVisible && editorFocus"
  },
  {
    "key": "ctrl+g",
    "command": "closeBreakpointWidget",
    "when": "breakpointWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "ctrl+g",
    "command": "closeFindWidget",
    "when": "editorFocus && findWidgetVisible && !isComposing"
  },
  {
    "key": "ctrl+g",
    "command": "closeMarkersNavigation",
    "when": "editorFocus && markersNavigationVisible"
  },
  {
    "key": "ctrl+g",
    "command": "closeParameterHints",
    "when": "editorFocus && parameterHintsVisible"
  },
  {
    "key": "ctrl+g",
    "command": "closeReferenceSearch",
    "when": "inReferenceSearchEditor && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+g",
    "command": "closeReferenceSearch",
    "when": "referenceSearchVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+g",
    "command": "closeReplaceInFilesWidget",
    "when": "replaceInputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+g",
    "command": "editor.action.webvieweditor.hideFind",
    "when": "webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "ctrl+g",
    "command": "editor.cancelOperation",
    "when": "cancellableOperation"
  },
  {
    "key": "ctrl+g",
    "command": "editor.closeCallHierarchy",
    "when": "callHierarchyVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+g",
    "command": "editor.closeTestPeek",
    "when": "testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
  },
  {
    "key": "ctrl+g",
    "command": "editor.gotoNextSymbolFromResult.cancel",
    "when": "hasSymbols"
  },
  {
    "key": "ctrl+g",
    "command": "filesExplorer.cancelCut",
    "when": "explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "gitlens.key.escape",
    "when": "editorTextFocus && gitlens:key:escape && !findWidgetVisible && !isInEmbeddedEditor && !renameInputVisible && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+g",
    "command": "hideSuggestWidget",
    "when": "suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "keybindings.editor.clearSearchResults",
    "when": "inKeybindings && inKeybindingsSearch"
  },
  {
    "key": "ctrl+g",
    "command": "leaveEditorMessage",
    "when": "messageVisible"
  },
  {
    "key": "ctrl+g",
    "command": "leaveSnippet",
    "when": "editorTextFocus && inSnippetMode"
  },
  {
    "key": "ctrl+g",
    "command": "list.clear",
    "when": "listFocus && listHasSelectionOrFocus && !inputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "notebook.hideFind",
    "when": "notebookEditorFocused && notebookFindWidgetFocused"
  },
  {
    "key": "ctrl+g",
    "command": "notifications.hideToasts",
    "when": "notificationToastsVisible"
  },
  {
    "key": "ctrl+g",
    "command": "notifications.hideToasts",
    "when": "notificationFocus && notificationToastsVisible"
  },
  {
    "key": "ctrl+g",
    "command": "removeSecondaryCursors",
    "when": "editorHasMultipleSelections && textInputFocus"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.closeQuickOpen",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.action.hideComment",
    "when": "commentEditorFocused"
  },
  {
    "key": "ctrl+g",
    "command": "workbench.statusBar.clearFocus",
    "when": "statusBarFocused"
  },
  {
    "key": "ctrl+h",
    "command": "deleteLeft",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "emacs-mcx.deleteBackwardChar"
  },
  {
    "key": "ctrl+h",
    "command": "-emacs-mcx.deleteBackwardChar",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+c m",
    "command": "workbench.actions.view.problems"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.actions.view.problems"
  },
  {
    "key": "ctrl+c o",
    "command": "workbench.action.output.toggleOutput"
  },
  {
    "key": "shift+cmd+u",
    "command": "-workbench.action.output.toggleOutput"
  },
  {
    "key": "ctrl+c d",
    "command": "workbench.debug.action.toggleRepl"
  },
  {
    "key": "shift+cmd+y",
    "command": "-workbench.debug.action.toggleRepl"
  },
  {
    "key": "ctrl+c t",
    "command": "workbench.action.terminal.toggleTerminal"
  },
  {
    "key": "ctrl+`",
    "command": "-workbench.action.terminal.toggleTerminal"
  }
]

